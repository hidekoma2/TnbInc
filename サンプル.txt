



struct IWipable
{
	/// デストラクタ
	virtual ~IWipable(void) { }

	/**
 	 * [複製] クローン
	 *	@return クローン。不必要になったら delete する必要があります。
	 */
	virtual IWipable* Clone(void) const = 0;

	/**
	 * [変換] ワイプ. 
	 *		baseBmp の上に overBmp を書いた物を返します。
	 *		par が 0なら baseBmp そのもの、 par が max なら overBmp そのものになります
	 *	@param baseBmp 元絵.
	 *	@param overBmp 先絵.
	 *	@param par 進捗(分子)
	 *	@param max 全体(分母)
	 *	@return 変換後の絵
	 */
	virutal CBitmapHandle Wipe(CBitmapHandle baseBmp, CBitmapHandle overBmp, UINT par, UINT max) const = 0;
};


struct IModifiable
{
	/// デストラクタ
	virtual ~IModifiable(void) { }

	/**
 	 * [複製] クローン
	 *	@return クローン。不必要になったら delete する必要があります。
	 */
	virtual IModifiable* Clone(void) const = 0;

	/**
	 * [変換] 加工. 
	 *		bmp を加工します。0 から maxに近づくにつれ bmp そのものになるようにします(par が max なら bmp そのもの)。
	 *	@param bmp 絵.
	 *	@param par 進捗(分子)
	 *	@param max 全体(分母)
	 *	@return 変換後の絵
	 */
	virutal CBitmapHandle Modify(CBitmapHandle bmp, UINT par, UINT max) const = 0;
};


class CModifingWiper : public IWipable
{
public:
	/**
 	 * [複製] クローン
	 *	@return クローン。不必要になったら delete する必要があります。
	 */
	virtual IModifiable* Clone(void) const
	{
	}


	virutal CBitmapHandle Wipe(
					CBitmapHandle base, 
					CBitmapHandle over, 
					UINT par, 
					UINT max) const
	(
		CBitmap bmp = over;
		vector<IModifing*>::iteretor i = m_apModifieres.begin();
		for ( ; i != m_apModifieres.end(); ++i )
		(
			bmp = (*i)->Modify(bmp, par, max);
		)
		return m_pWiper->Wipe(base,bmp,par,max);
	)
	virtual IWaping* Clone(void) const
	(
	)

	CModifingWiper(const IWiping& w) : m_pWiper(w.Clone())
	(
	)

protected:
	IWiping*			m_pWiper;
	vector<IModifing*>	m_apModifieres,
);

class CAnimateBitmap : CCopyImmposible
(
	CBitmapHandle	m_topBmp;		///<最初の絵
	IWiping*		m_pDefaultWiper;///<ワイパー
	struct TParam
	(
		UINT			max;	//なんこま
		CBitmapHandle	bmp;
		IWiping*		pWiper;
	);
	vector<TParam>	m_params,
public:

	bool SetFirstBitmap(CBitmapHandle bmp,const IWiping* pDefaultWiper)
	()

	bool AddBipmap(CBitmapHandle bmp,UINT cnt = 1, const IWiping* pWiper = NULL)
	()

	size_t GetLenght(void) const
	()

	CBitmapHandle Get(INDEX index) const
	()



)
);



